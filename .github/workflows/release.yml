name: Release

on:
  push:
    branches:
      - "ci"
  pull_request:
    branches:
      - "master"
      - "ci"
      - "[0-9]+.[0-9x]+*"
    paths:
      - "uvloop/_version.py"

jobs:
  validate-release-request:
    runs-on: ubuntu-latest
    steps:
    - name: Store release version for later use
      env:
        VERSION: ${{ steps.checkver.outputs.version }}
      run: |
        mkdir -p dist/
        echo "${VERSION}" > dist/VERSION

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  build-sdist:
    needs: validate-release-request
    runs-on: ubuntu-latest

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50
        submodules: true

    - uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Build source distribution
      run: |
        python -m pip install --upgrade setuptools wheel pip
        python setup.py sdist

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.tar.*

  build-wheels:
    needs: validate-release-request
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        cibw_python: ["cp37-*", "cp38-*", "cp39-*", "cp310-*", "cp311-*"]
        cibw_arch: ["x86_64", "aarch64", "universal2"]
        exclude:
          - os: ubuntu-latest
            cibw_arch: universal2
          - os: macos-latest
            cibw_arch: aarch64
          - os: macos-latest
            cibw_python: "cp37-*"
            cibw_arch: universal2

    defaults:
      run:
        shell: bash

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50
        submodules: true

    - name: Set up QEMU
      if: matrix.os == 'ubuntu-latest' && matrix.cibw_arch == 'aarch64'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64

    - name: Install macOS deps
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install gnu-sed libtool autoconf automake

    - uses: pypa/cibuildwheel@v2.9.0
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BUILD: ${{ matrix.cibw_python }}
        CIBW_ARCHS: ${{ matrix.cibw_arch }}
        CIBW_TEST_EXTRAS: "test"
        CIBW_TEST_COMMAND: "python -m unittest discover -v {project}/tests"
        CIBW_TEST_COMMAND_WINDOWS: "python -m unittest discover -v {project}\\tests"
        CIBW_TEST_SKIP: "*universal2:arm64"

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: wheelhouse/*.whl
